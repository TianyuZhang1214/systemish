alias vi='vim'
alias ls='ls --color'
alias sl='ls --color'
alias src='source ~/.bash_profile'
alias gitd='git difftool'
alias gtid='git difftool'
alias igtd='git difftool'
alias gti='git'
alias gitshort='git rev-parse --short HEAD'
alias gs='git status'
alias gu='git add -u'
alias make='make -j'
alias sc='screen -dRR'
alias moo='ssh akalia@moo.cmcl.cs.cmu.edu'
alias cmu='ssh akalia@linux.gp.cs.cmu.edu'
alias zdu='du -mh --max-depth=1 | sort -hr'

export GTEST_BREAK_ON_FAILURE=1

# Avoid duplicates in bash history
shopt -s histappend
HISTIGNORE='ls'
export HISTSIZE=100000
export HISTFILESIZE=100000
export HISTCONTROL=ignoreboth:erasedups
bind '"\C-l":"\C-r"'

PATH=$PATH:"/usr/local/sbin:/usr/sbin:/sbin"  # I hate Debian
PATH=$PATH:"$HOME/systemish/scripts"
export PATH

export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/lib
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/lib/x86_64-linux-gnu

export RTE_SDK="$HOME/dpdk"
export RTE_TARGET=x86_64-native-linuxapp-gcc

# Make object files (*.o and *.lo) grey
LS_COLORS='di=36:fi=0:ln=31:pi=5:so=5:bd=5:cd=5:or=31:mi=0:ex=35:*.rpm=90:*.o=90;40:*.lo=90;40'
export LS_COLORS

# To show IP address in bash prompt
# export PS1="[\u@`ifconfig | grep -Eo 'inet (addr:)?([0-9]*\.){3}[0-9]*' | grep -Eo '([0-9]*\.){3}[0-9]*' | grep -v '127.0.0.1' | head -1`] \W$ "


#
# Functions
#

alias psmain='ps -afx | grep main'

# Remove SHM regions
function drop_shm()
{
    echo "Dropping SHM entries"
    for i in $(ipcs -m | awk '{ print $1; }'); do
        if [[ $i =~ 0x.* ]]; then
            sudo ipcrm -M $i 2>/dev/null
        fi
    done
}

alias youtubemp3='youtube-dl --extract-audio --audio-format mp3 --audio-quality 0'

function maketar()
{
  tar cvzf "${1%%/}.tar.gz"  "${1%%/}/";
}

# Emulab clusters
function a() {
	ssh akalianode-$1.RDMA.fawn.apt.emulab.net
}

function utah() {
 ssh akalianode-$1.RDMA.ron-PG0.utah.cloudlab.us
}

function clemson() {
  ssh akalianode-$1.RDMA.ron-PG0.clemson.cloudlab.us
}

# Grep
function zgrep()
{
  grep -rnIi --color "$1" "${2:-.}";
}

# Extract any archive
function extract {
 if [ -z "$1" ]; then
    # display usage if no parameters given
    echo "Usage: extract <path/file_name>.<zip|rar|bz2|gz|tar|tbz2|tgz|Z|7z|xz|ex|tar.bz2|tar.gz|tar.xz>"
 else
    if [ -f $1 ] ; then
        # NAME=${1%.*}
        # mkdir $NAME && cd $NAME
        case $1 in
          *.tar.bz2)   tar xvjf $1    ;;
          *.tar.gz)    tar xvzf $1    ;;
          *.tar.xz)    tar xvJf $1    ;;
          *.lzma)      unlzma $1      ;;
          *.bz2)       bunzip2 $1     ;;
          *.rar)       unrar x -ad $1 ;;
          *.gz)        gunzip $1      ;;
          *.tar)       tar xvf $1     ;;
          *.tbz2)      tar xvjf $1    ;;
          *.tgz)       tar xvzf $1    ;;
          *.zip)       unzip $1       ;;
          *.Z)         uncompress $1  ;;
          *.7z)        7z x $1        ;;
          *.xz)        unxz $1        ;;
          *.exe)       cabextract $1  ;;
          *)           echo "extract: '$1' - unknown archive method" ;;
        esac
    else
        echo "$1 - file does not exist"
    fi
fi
}

# Show the sizes of everything in the current directory
function sizels {
  du -h --max-depth=1
}

# clang-format all modified files
function cformatgit() {
  gitdir=`git rev-parse --show-toplevel`
  if [ "$?" -ne "0" ] ; then
    echo "Cannot get git root dir"
    return
  fi

  echo "Format ($gitdir):"
  allfiles=`git diff --cached --name-only`

  for fl in $allfiles ; do
    extfl="${fl##*.}"
    if [ "$extfl" == "cc"  ] || [ "$extfl" == "h"  ] || [ "$extfl" == "c"  ] ; then
      if [ -f "$gitdir/$fl" ] ; then
        echo "Format "$gitdir/$fl" ($extfl)"
        clang-format -i "$gitdir/$fl"
        if [ "$?" -ne "0" ] ; then
          echo "   >> Error to apply format"
        fi
      else
        echo "Cannot find "$gitdir/$fl" ($extfl)"
      fi
    fi
  done
}

# Shortcut for cd using FZF
pp() {
  local dir
  dir=$(find . -path '*/\.*' -prune -o -type d -print | sed '1d;s/^..//' | fzf-tmux +m) && cd "$dir"
}

# FZF config
[ -f ~/.fzf.bash ] && source ~/.fzf.bash
export FZF_DEFAULT_COMMAND='ag -l -g ""'

export MLX4_SINGLE_THREADED=1
export MLX5_SINGLE_THREADED=1
export MLX_QP_ALLOC_TYPE="HUGE"
export MLX_CQ_ALLOC_TYPE="HUGE"

# Requires vim-fetch plugin
sf() {
  if [ "$#" -lt 1 ]; then echo "sf: Supply string to search for!"; return 1; fi
  printf -v search "%q" "$*"
  include="cpp,c,cc,h,sh"
  exclude=".config,.git"
  rg_command='rg --column --line-number --no-heading --fixed-strings --ignore-case --no-ignore --hidden --follow --color "always" -g "*.{'$include'}" -g "!{'$exclude'}/*"'
  files=`eval $rg_command $search | fzf --ansi --multi --reverse | awk -F ':' '{print $1":"$2":"$3}'`
  echo "$files"
  [[ -n "$files" ]] && ${EDITOR:-vim} $files
}

export autorun_app="small_rpc_tput"
#export autorun_app="consensus"
#export autorun_app="large_rpc_tput"
#export autorun_app="masstree_analytics"
#export autorun_app="mica_test"

# Initial directory
cd ~/eRPC
#cd ~/rdma_bench/rc-swarm

